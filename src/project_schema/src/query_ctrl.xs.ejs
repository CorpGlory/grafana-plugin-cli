import { QueryCtrl } from 'grafana/app/plugins/sdk';

export class GenericDatasourceQueryCtrl extends QueryCtrl {

  <%_ if(isTypeScript) { -%>
  scope: any;
  target: any;
  static templateUrl: string;
  private _datasourcePath: string;
  <%_ } -%>
  

  constructor($scope<%- tsType('any')%>, $injector<%- tsType('any')%>)  {
    super($scope, $injector);

    this.scope = $scope;
    this.target.target = this.target.target || 'select metric';
    this.target.type = this.target.type || 'timeserie';

    this.initStyles();
  }

  <%_ if(useStyles) { -%>
  initStyles() {
    window.System.import(this.datasourcePath + 'css/datasource.base.css!');
    // Remove next lines if you don't need separate styles for light and dark themes
    if (window.grafanaBootData.user.lightTheme) {
    window.System.import(this.datasourcePath + 'css/datasource.light.css!');
    } else {
    window.System.import(this.datasourcePath + 'css/datasource.dark.css!');
    }
  }
  <%_ } -%>
  
  getOptions(query<%- tsType('any')%>) {
    return this.datasource.metricFindQuery(query || '');
  }

  toggleEditorMode() {
    this.target.rawQuery = !this.target.rawQuery;
  }

  onChangeInternal() {
    this.panelCtrl.refresh(); // Asks the panel to refresh data.
  }

  get datasourcePath() {
    if (this._datasourcePath === undefined) {
      this._datasourcePath = `/public/plugins/${this.datasource.type}/`;
    }
    return this._datasourcePath;
  }
}

GenericDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';
